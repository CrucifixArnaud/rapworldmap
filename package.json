{
  "name": "rapworldmap",
  "version": "1.8.0",
  "description": "Display a map of Rapper based on their childhood neighborhood",
  "main": "rapworldmap.js",
  "scripts": {
    "test": "nyc mocha --require test/init.js --exit",
    "dev:test": "nodemon -x \"npm run test\"",
    "dev:css": "nodemon -e scss -x \"npm run compile:css && npm run autoprefixer\"",
    "dev:css:minify": "nodemon -e scss -x \"npm run build:css\"",
    "dev:js": "watchify -t [ babelify ] app/assets/js/atlas.js -o public/js/atlas.bundle.js | watchify -t [ babelify ] app/assets/js/admin.js -o public/js/admin.bundle.js",
    "compile:css": "node-sass app/assets/scss/ -o public/css/",
    "autoprefixer": "postcss -um autoprefixer -r public/css/*.css",
    "minify:css": "postcss -u cssnano -r public/css/*.css -m { inline:false }",
    "browserify": "NODE_ENV=production browserify app/assets/js/atlas.js -t [ babelify ] -o public/js/atlas.bundle.js | NODE_ENV=production browserify app/assets/js/admin.js -t [ babelify ] -o public/js/admin.bundle.js",
    "uglify:js": "NODE_ENV=production uglifyjs public/js/atlas.bundle.js -mc -o public/js/atlas.bundle.js | NODE_ENV=production uglifyjs public/js/admin.bundle.js -mc -o public/js/admin.bundle.js",
    "build:css": "npm run compile:css && npm run autoprefixer && npm run minify:css",
    "build:js": "npm run browserify && npm run uglify:js",
    "build": "NODE_ENV=production npm run build:js && npm run build:css",
    "dev": "NODE_ENV=development nodemon rapworldmap.js",
    "start": "NODE_ENV=production node rapworldmap.js",
    "lint": "eslint app/assets/js"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:CrucifixArnaud/rapworldmap.git"
  },
  "author": "Crucifix Arnaud",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/CrucifixArnaud/rapworldmap/issues"
  },
  "homepage": "https://gitlab.com/CrucifixArnaud/rapmap#README",
  "dependencies": {
    "@sentry/react": "^6.17.4",
    "@sentry/tracing": "^6.17.4",
    "babel-polyfill": "^6.26.0",
    "bcrypt-nodejs": "^0.0.3",
    "body-parser": "^1.18.2",
    "client-sessions": "^0.8.0",
    "connect-flash": "^0.1.1",
    "cookie-parser": "^1.4.3",
    "core-js": "^2.5.3",
    "dotenv": "^4.0.0",
    "ejs": "^2.5.7",
    "express": "^4.16.2",
    "express-ejs-layouts": "^2.3.1",
    "express-validator": "^4.3.0",
    "focus-trap-react": "^3.1.2",
    "jsonwebtoken": "^8.1.0",
    "leaflet.markercluster": "1.0.0",
    "mapbox.js": "^3.3.0",
    "moment": "^2.20.1",
    "mongoose": "^4.13.8",
    "morgan": "^1.9.0",
    "multer": "^1.3.0",
    "nodemailer": "^4.4.1",
    "passport": "^0.4.0",
    "passport-http": "^0.3.0",
    "passport-jwt": "^3.0.1",
    "passport-local": "^1.0.0",
    "promise-polyfill": "6.0.2",
    "prop-types": "^15.6.0",
    "raf": "^3.4.0",
    "react": "^16.2.0",
    "react-dom": "^16.2.0",
    "react-motion": "^0.5.2",
    "react-onclickout": "^2.0.8",
    "react-router-dom": "^4.2.2",
    "sharp": "0.27.2",
    "underscore": "^1.8.3",
    "universal-cookie": "^2.1.2",
    "whatwg-fetch": "^2.0.3"
  },
  "devDependencies": {
    "babel-cli": "^6.26.0",
    "babel-eslint": "^10.1.0",
    "babel-plugin-transform-class-properties": "^6.24.1",
    "babel-plugin-transform-object-rest-spread": "^6.26.0",
    "babel-preset-env": "^1.6.1",
    "babel-preset-react": "^6.24.1",
    "babelify": "^7.3.0",
    "browserify": "^17.0.0",
    "chai": "^4.1.2",
    "chai-http": "^3.0.0",
    "cssnano": "^5.1.14",
    "eslint": "^4.14.0",
    "eslint-plugin-react": "^7.5.1",
    "isomorphic-fetch": "^2.2.1",
    "mocha": "^4.1.0",
    "node-sass": "^6.0.0",
    "nodemon": "^1.14.7",
    "nyc": "^15.1.0",
    "postcss": "^8.3.3",
    "postcss-cli": "^8.3.1",
    "react-router": "^4.2.0",
    "should": "^13.2.0",
    "uglify-js": "^3.3.4",
    "uglifyify": "^4.0.5",
    "watchify": "^4.0.0"
  },
  "nyc": {
    "include": [
      "app/**/*.js"
    ],
    "exclude": [
      "test/**/*.js"
    ],
    "reporter": [
      "html",
      "text"
    ],
    "extension": [
      ".jsx"
    ],
    "cache": true,
    "all": true,
    "report-dir": "test/coverage"
  }
}
